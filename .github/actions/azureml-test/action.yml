# ---------------------------------------------------------
# Copyright (c) Recommenders contributors.
# Licensed under the MIT License.
# ---------------------------------------------------------

name: azureml-tests
description: "Submit experiment to AzureML cluster"
inputs:
  EXP_NAME:
    required: true
    description: AzureML experiment Name
  ENV_NAME:
    required: true
    description: AzureML environment Name
  TEST_KIND:
    required: true
    description: Type of test - unit or nightly
  AZUREML_TEST_CREDENTIALS:
    required: true
    description: Credentials for AzureML login
  AZUREML_TEST_SUBID:
    required: true
    description: AzureML subscription ID
  PYTHON_VERSION:
    required: true
    description: Python version used for the tests
  TEST_GROUP:
    required: true
    description: Test group defined in test_group.py
  RG:
    required: false
    description: AzureML resource group name
    default: "recommenders_project_resources"
  WS:
    required: false
    description: AzureML workspace name
    default: "azureml-test-workspace"
  LOG_DIR:
    required: false
    description: Directory storing the test logs
    default: "test_logs"
  PYTEST_EXIT_CODE_FILE:
    required: false
    description: File storing the pytest exit code
    default: "pytest_exit_code.log"

runs:
  using: "composite"
  steps:
    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: Install AzureML Python SDK
      shell: bash
      run: pip install --quiet azure-ai-ml mlflow azureml-mlflow
    - name: Log in to Azure
      uses: azure/login@v2
      with:
        creds: ${{ inputs.AZUREML_TEST_CREDENTIALS }}
    - name: Submit tests to AzureML
      shell: bash
      run: |
        python tests/ci/azureml_tests/submit_groupwise_azureml_pytest.py \
          --subid ${{ inputs.AZUREML_TEST_SUBID }} \
          --rg ${{ inputs.RG }} \
          --ws ${{ inputs.WS }} \
          --cluster ${{ contains(inputs.TEST_GROUP, 'gpu') && 'gpu-cluster' || 'cpu-cluster' }} \
          --expname ${{ inputs.EXP_NAME }} \
          --envname ${{ inputs.ENV_NAME }} \
          --testkind ${{ inputs.TEST_KIND}} \
          --python-version ${{ inputs.PYTHON_VERSION }} \
          --testgroup ${{ inputs.TEST_GROUP }} \
          --disable-warnings \
          --sha ${GITHUB_SHA}
    - name: Post tests
      if: ${{ ! cancelled() }}
      shell: bash
      run: |
        python tests/ci/azureml_tests/post_pytest.py \
          --subid ${{ inputs.AZUREML_TEST_SUBID }} \
          --rg ${{ inputs.RG }} \
          --ws ${{ inputs.WS }} \
          --expname ${{ inputs.EXP_NAME }} \
          --log-dir ${{ inputs.LOG_DIR }} \
          --pytest-exit-code-file ${{ inputs.PYTEST_EXIT_CODE_FILE }}
    - name: Save logs
      if: ${{ ! cancelled() }}
      uses: actions/upload-artifact@v4
      with:
        name: logs-${{ inputs.TEST_GROUP }}-python${{ inputs.PYTHON_VERSION }}
        path: ${{ inputs.LOG_DIR }}
    - name: Get exit status
      shell: bash
      id: exit_status
      run: echo "code=$(cat ${{ inputs.PYTEST_EXIT_CODE_FILE }})" >> $GITHUB_OUTPUT
    - name: Check PyTest Success/Failure
      if: ${{ steps.exit_status.outputs.code != 0 }}
      uses: actions/github-script@v7
      with:
        script: |
            core.setFailed('All tests did not pass!')
